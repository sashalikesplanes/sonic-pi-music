# Prepare samples
cocaine = "/home/sasha/projects/sonic-pi-tracks/samples/cocaine.wav"
# Perfect on beat 13 of 16
define(:good_girl) do
  with_fx(:distortion, distort: 0.3, mix: 0.5) do
    sample("/home/sasha/projects/sonic-pi-tracks/samples/good_girl.wav", rate: 0.9, start: 0.15, finish: 0.7, amp: 3)
  end
end

define(:slip_it_in) do
  sample("/home/sasha/projects/sonic-pi-tracks/samples/slip_it_in.wav", rate: 0.85, start: 0.15, finish: 0.84, amp: 3)
end

define(:spread_yourself) do
  sample(
    "/home/sasha/projects/sonic-pi-tracks/samples/spread_yourself.wav",
    rate: 0.95,
    start: 0.10,
    finish: 0.84,
    amp: 4
  )
end

use_bpm(120)
set_volume!(2.5)

live_loop(:metro) do
  sleep(4)
end

live_loop(:control, sync: :metro) do
  set_mixer_control!(amp: 1, amp_slide: 2)
  set_mixer_control!(hpf: 0, hpf_slide: 4)
  set_mixer_control!(lpf: 130, lpf_slide: 4)
  sleep(16)
end

live_loop(:drums, sync: :metro) do
  with_fx(:nrlpf, cutoff: 40) do
    with_fx(:bpf, center: 50, res: 0.3) do
      with_fx(:reverb, mix: 0.2, room: 0.3, damp: 0.1) do
        tick
        sample(:bd_haus, amp: 4.5, sustain: 0.25, release: 0.25, attach: 0.01, decay: 0) if (spread(1, 4)).look
        sample(:bd_haus, amp: 4.5, sustain: 0.25, release: 0.25, attach: 0.01, decay: 0) if (spread(1, 16)).rotate(6).look
      end
    end
  end

  sleep(0.25)
end

reference_amp = 0

# recording_start
live_loop(:main) do
  tick(:main)
  # Amps
  kick_amp = (ramp(*([2, 2, 2, 2, 1.5, 1.5, 1.5, 1.5, 1])))
  kick_amp = [1.0]
  sync_amp = [0]

  # Beats (all per 1/4 note)
  kick_beats = [1, 0, 0, 0] + [1, 0, 1, 0] + [1, 0, 0, 0] * 1
  sync_beats = [0, 0, 1, 0] * 3 + [0, 1, 1, 0]

  # Polymeter
  in_thread do
    use_synth(:tb303)
    with_fx(:distortion, distort: 0.5, mix: 0.4, reps: 64) do |dist|
      tick(:poly_cutoff)
      control(dist, amp: sync_amp.ring.tick(:sync) * 0.5)

      if sync_beats.ring.tick == 1
        play(
          :es1,
          attack: 0.05,
          release: 0.35,
          cutoff: (line(70, 90, inclusive: true, steps: 64)).mirror.look(:poly_cutoff)
        )
      end

      sleep(0.25)
    end
  end

  sleep(100)
end
